% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvreg_lkocv.R
\name{mvreg_lkocv}
\alias{mvreg_lkocv}
\title{Leave-k-out Cross-validation for mvreg models}
\usage{
mvreg_lkocv(
  object,
  k = 1,
  num_samples = 1000,
  seed = NULL,
  mc.cores = round(parallel::detectCores()/2)
)
}
\arguments{
\item{object}{A mvreg object.}

\item{k}{Number of observations to leave out in each fold. Must be a positive integer
and less than the total number of observations. Default is 1.}

\item{num_samples}{Number of random combinations to sample when using
approximation. Only used when the total number of possible combinations exceeds
this value. Default is 1000.}

\item{seed}{Integer or NULL. Random seed for reproducibility. If NULL, the current
random seed state is used. Default is NULL.}

\item{mc.cores}{Number of cores to use for parallel processing. Default is
half of the available cores.}
}
\value{
The average mean squared prediction error divided by k, indicating the model's
predictive performance, where lower values signify better predictions.
}
\description{
Performs leave-k-out cross-validation for models fitted by \code{mvreg()}. It supports both exact computation of all possible k-fold
combinations and approximation using random sampling when the number of possible combinations is large.
}
\details{
For each leave-k-out sample, the function:
\enumerate{
\item Refits the \code{mvreg} model excluding k observations
\item Uses the fitted model to predict the responses for the left-out observations
\item Calculates the prediction error
}

When the number of possible combinations (\code{choose(n,k)}) exceeds \code{num_samples},
the function uses random sampling to approximate the leave-k-out cross-validation.

Parallel processing is implemented using either \code{mclapply} (Unix-like systems)
or \code{parLapply} (Windows) to improve computational efficiency.
}
\examples{
\dontrun{
# Fit a model with mvreg
fit <- mvreg(Sepal.Length ~ Species, data = iris)

# Perform leave-1-out cross-validation
mvreg_lkocv(fit)

# Perform leave-2-out cross-validation with approximation
mvreg_lkocv(fit, k = 2)

# Perform leave-2-out cross-validation without approximation
mvreg_lkocv(object, k = 2, num_samples = choose(object$nobs, 2))

# Use approximation with 500 samples
mvreg_lkocv(fit, k = 2, num_samples = 500, seed = 123)
}


}
