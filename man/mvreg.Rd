% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvreg.R
\name{mvreg}
\alias{mvreg}
\title{Heteroscedastic linear model with variance as a function of linear predictor.}
\usage{
mvreg(
  formula.mu,
  formula.s2 = NULL,
  data = NULL,
  tol = 1e-10,
  maxit = 100L,
  start.s2 = c("residuals", "gamma", "zero"),
  method = c("wls", "full_nr"),
  vcov.type = c("expected", "observed")
)
}
\arguments{
\item{formula.mu}{A two-sided formula describing the model for mean component.}

\item{formula.s2}{A one-sided formula describing the model for variance component.}

\item{data}{An optional data frame, list or environment (or object coercible by as.data.frame to a data frame) containing the variables in the model.}

\item{tol}{Positive value indicating what is the minimum difference between parameter estimates between two iterations to stop the algorithm.}

\item{maxit}{Integer value indicating the maximum number of iteration.}

\item{start.s2}{A character vector indicating how to select initial values for variance component parameters.}

\item{method}{Method chosen for estimation of parameters of mean component}

\item{vcov.type}{A string to specify whether to use observed or expected Fisher information matrix in order to compute variance-covariance matrix of estimates}
}
\value{
An object of class mvreg
}
\description{
Heteroscedastic linear model with variance as a function of linear predictor.
}
\examples{
mvreg_mod <- mvreg(Sepal.Length ~ Species, data = iris) # same formula for mean and variance
mvreg_mod1 <- mvreg(Sepal.Length ~ Species, ~Sepal.Width, data = iris) # different formulas
summary(mvreg_mod)
summary(mvreg_mod1)

# coef
coef(mvreg_mod)
coef(mvreg_mod, partition = "mu")

# vcov
vcov(mvreg_mod)
vcov(mvreg_mod, partition = "s2")

# fitted
fitted(mvreg_mod)
fitted(mvreg_mod, type = "mu")
fitted(mvreg_mod, type = "log.s2")
fitted(mvreg_mod, type = "s2")

# logLik
logLik(mvreg_mod)
logLik(mvreg_mod1)

# predict without newdata
predict(mvreg_mod1)
predict(mvreg_mod1, type = "mu")
predict(mvreg_mod1, type = "log.s2", se.fit = TRUE)
predict(mvreg_mod1, type = "s2", interval = TRUE)
predict(mvreg_mod1, se.fit = TRUE, interval = TRUE, level = 0.99)

# predict with newdata
unique(c(mvreg_mod1$colx, mvreg_mod1$colz)) # getting names of explanatory variables

newdata <- data.frame(
  Species = levels(iris$Species),
  Sepal.Width = c(min(iris$Sepal.Width), mean(iris$Sepal.Width), max(iris$Sepal.Width))
)

newdata <- expand.grid(newdata)

predict(mvreg_mod1, newdata = newdata, se.fit = TRUE, interval = TRUE)
}
